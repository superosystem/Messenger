definitions:
  request.Chat:
    properties:
      other_user_id:
        type: integer
    required:
    - other_user_id
    type: object
  request.GoogleLogin:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  request.Login:
    properties:
      email:
        type: string
      password:
        maxLength: 30
        minLength: 5
        type: string
      user_name:
        maxLength: 15
        minLength: 3
        type: string
    required:
    - password
    type: object
  request.Message:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  request.RefreshToken:
    properties:
      refresh_token:
        minLength: 10
        type: string
    type: object
  request.UserSignUp:
    properties:
      age:
        minimum: 13
        type: integer
      email:
        type: string
      first_name:
        maxLength: 50
        minLength: 2
        type: string
      last_name:
        maxLength: 50
        minLength: 1
        type: string
      password:
        maxLength: 30
        minLength: 5
        type: string
      user_name:
        maxLength: 15
        minLength: 3
        type: string
    required:
    - age
    - email
    - first_name
    - last_name
    - password
    - user_name
    type: object
  response.Chat:
    properties:
      chat_id:
        type: integer
      first_name:
        type: string
      last_message:
        type: string
      last_message_at:
        type: string
      profile_picture:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
    type: object
  response.Message:
    properties:
      content:
        type: string
      created_at:
        type: string
      is_current_user:
        type: boolean
      message_id:
        type: integer
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  response.TokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  response.User:
    properties:
      created_at:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      profile_image:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/google-sign-in:
    post:
      description: API for user to login with google
      operationId: UserGoogleLogin
      parameters:
      - description: Google Token Input
        in: body
        name: inputs
        required: true
        schema:
          $ref: '#/definitions/request.GoogleLogin'
      responses:
        "200":
          description: Successfully logged in with google
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.TokenResponse'
              type: object
        "400":
          description: Invalid inputs
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to login
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Login with google (User)
      tags:
      - User Authentication
  /auth/renew-access-token:
    post:
      description: API for user to renew access token using refresh token
      operationId: UserRenewAccessToken
      parameters:
      - description: Refresh token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.RefreshToken'
      responses:
        "200":
          description: Successfully generated access token using refresh token
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.TokenResponse'
              type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Invalid refresh token
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: Refresh token blocked
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: No session found for the given refresh token
          schema:
            $ref: '#/definitions/response.Response'
        "410":
          description: Refresh token expired
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed generate access token
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Renew Access Token (User)
      tags:
      - User Authentication
  /auth/sign-in:
    post:
      description: API for user to login with email | user_name with password
      operationId: UserLogin
      parameters:
      - description: Login Details
        in: body
        name: inputs
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      responses:
        "200":
          description: Successfully logged in
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.TokenResponse'
              type: object
        "400":
          description: Invalid inputs
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: User not exist with given login credentials
          schema:
            $ref: '#/definitions/response.Response'
        "403":
          description: User blocked by admin
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to login
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Login with password (User)
      tags:
      - User Authentication
  /auth/sign-up:
    post:
      description: API for user to register a new account
      operationId: UserSignUp
      parameters:
      - description: Input Fields
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserSignUp'
      responses:
        "201":
          description: Successfully Account Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: A verified user already exist with given user credentials
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to sign up
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Sign up (User)
      tags:
      - User Authentication
  /chats:
    get:
      description: API for user to get all recent chats of user with others
      operationId: GetRecentChats
      parameters:
      - description: Page Number
        in: query
        name: page_number
        type: integer
      - description: Count
        in: query
        name: count
        type: integer
      responses:
        "200":
          description: Successfully retrieved recent chats of user
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.Chat'
                  type: array
              type: object
        "204":
          description: There is no chats recent chats for users
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to retrieved recent chats of user
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get user chats (User)
      tags:
      - Users Chats
    post:
      description: API for user create a new chat with other user if already exist
        will return then existing chat id
      operationId: SaveChat
      parameters:
      - description: Input fields
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.Chat'
      responses:
        "200":
          description: Successfully chat saved
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: integer
              type: object
        "500":
          description: Failed save to chat for user
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Save New chat (User)
      tags:
      - Users Chats
  /chats/{chat_id}/messages:
    get:
      description: API for user to get all messages in a specific chat
      operationId: GetAllMessages
      parameters:
      - description: Chat ID
        in: path
        name: chat_id
        required: true
        type: integer
      - description: Page Number
        in: query
        name: page_number
        type: integer
      - description: Count
        in: query
        name: count
        type: integer
      responses:
        "200":
          description: Successfully retrieved message for the chat
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.Message'
                  type: array
              type: object
        "204":
          description: There is no message between users
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to retrieve message for this chat
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get messages (User)
      tags:
      - Users Message
    post:
      description: API for user to save a new message
      operationId: SaveMessage
      parameters:
      - description: Chat ID
        in: path
        name: chat_id
        required: true
        type: integer
      - description: Message field
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.Message'
      responses:
        "200":
          description: Successfully message saved
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: integer
              type: object
        "500":
          description: Failed to save message
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Save message (User)
      tags:
      - Users Message
  /users:
    get:
      description: API for user to list all users in the application
      operationId: ListAllUsers
      parameters:
      - description: Page Number
        in: query
        name: page_number
        type: integer
      - description: Count
        in: query
        name: count
        type: integer
      responses:
        "200":
          description: Successfully retrieved all users
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.User'
                  type: array
              type: object
        "204":
          description: There is no users
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed retrieved all users
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: List all users (User)
      tags:
      - Users
  /ws:
    get:
      description: API for user to create a web socket connection
      operationId: ServeWebSocket
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Sever Socket Connection (User)
      tags:
      - Users Socket
swagger: "2.0"
